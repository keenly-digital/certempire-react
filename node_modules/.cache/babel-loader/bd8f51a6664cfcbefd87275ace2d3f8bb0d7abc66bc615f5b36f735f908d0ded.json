{"ast":null,"code":"var _jsxFileName = \"/Users/megamac/Dev/GitHub/projects/certempire-react/src/pages/DownloadsPage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/DownloadsPage.tsx\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { useUser } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// --- Styled Components ---\nconst PageHeader = styled.h2` font-size: 24px; font-weight: 600; margin-bottom: 24px; `;\n_c = PageHeader;\nconst DownloadsTable = styled.div` background-color: white; border-radius: 16px; border: 1px solid #EAEAEA; overflow: hidden; `;\n_c2 = DownloadsTable;\nconst Row = styled.div` display: grid; grid-template-columns: 3fr 2fr; align-items: center; padding: 16px 24px; border-bottom: 1px solid #f0f0f0; &:last-child { border-bottom: none; } `;\n_c3 = Row;\nconst HeaderRow = styled(Row)` background-color: #fafafa; font-weight: 600; color: #333; `;\n_c4 = HeaderRow;\nconst DataCell = styled.div` color: #555; `;\n_c5 = DataCell;\nconst ButtonContainer = styled.div` display: flex; gap: 12px; justify-content: flex-end; `;\n_c6 = ButtonContainer;\nconst PrimaryButton = styled(Link)` display: inline-block; background-color: #2c2c54; color: white; padding: 10px 20px; border-radius: 8px; text-decoration: none; font-weight: 500; font-size: 14px; `;\n_c7 = PrimaryButton;\nconst SecondaryButton = styled(Link)` display: inline-block; background-color: white; color: #2c2c54; border: 1px solid #2c2c54; padding: 10px 20px; border-radius: 8px; text-decoration: none; font-weight: 500; font-size: 14px;`;\n_c8 = SecondaryButton;\nconst MessageContainer = styled.div` padding: 40px; text-align: center; color: #757575; background-color: white; border-radius: 12px; border: 1px solid #EAEAEA; `;\n_c9 = MessageContainer;\nconst DownloadsPage = () => {\n  _s();\n  // We now get both the user and the isLoading status from our context\n  const {\n    user,\n    isLoading: isUserLoading\n  } = useUser();\n  const [files, setFiles] = useState([]);\n  const [isPageLoading, setPageLoading] = useState(true);\n  useEffect(() => {\n    const getPurchasedFiles = async () => {\n      // We must have a user and their Supabase ID to continue\n      if (!user || !user.simulation_user_id) {\n        setPageLoading(false);\n        return;\n      }\n      try {\n        const {\n          data: purchases,\n          error: purchaseError\n        } = await supabase.from('user_purchases').select('file_id').eq('user_id', user.simulation_user_id);\n        if (purchaseError) throw purchaseError;\n        if (!purchases || purchases.length === 0) {\n          setFiles([]);\n          return;\n        }\n        const fileIds = purchases.map(p => p.file_id);\n        const {\n          data: fileData,\n          error: fileError\n        } = await supabase.from('files').select('id, filename').in('id', fileIds);\n        if (fileError) throw fileError;\n        setFiles(fileData || []);\n      } catch (error) {\n        console.error('Error fetching purchased files:', error);\n        setFiles([]);\n      } finally {\n        setPageLoading(false);\n      }\n    };\n\n    // This is the key change: We wait for the User Context to finish loading.\n    // Once isUserLoading is false, we know if we have a user or not, and we can proceed.\n    if (!isUserLoading) {\n      getPurchasedFiles();\n    }\n  }, [isUserLoading, user]); // The effect re-runs if the loading status or user changes\n\n  // Show a generic loading message while the context is loading or the page is fetching\n  if (isUserLoading || isPageLoading) return /*#__PURE__*/_jsxDEV(MessageContainer, {\n    children: \"Loading your downloads...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 46\n  }, this);\n\n  // Show this if the context has loaded but there is no user\n  if (!user) return /*#__PURE__*/_jsxDEV(MessageContainer, {\n    children: \"Please log in to view your downloads.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      children: \"Downloads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownloadsTable, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderRow, {\n        children: [/*#__PURE__*/_jsxDEV(DataCell, {\n          children: \"Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataCell, {\n          style: {\n            textAlign: 'right'\n          },\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), files.length > 0 ? files.map(file => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(DataCell, {\n          children: file.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DataCell, {\n          children: /*#__PURE__*/_jsxDEV(ButtonContainer, {\n            children: [/*#__PURE__*/_jsxDEV(PrimaryButton, {\n              to: \"#\",\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SecondaryButton, {\n              to: `/practice/${file.id}`,\n              children: \"Practice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, file.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(MessageContainer, {\n        style: {\n          border: 'none',\n          borderRadius: 0\n        },\n        children: \"You have no available downloads.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(DownloadsPage, \"OqDEZaO6/RnJ2m42xhLmH2DGOHE=\", false, function () {\n  return [useUser];\n});\n_c0 = DownloadsPage;\nexport default DownloadsPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"PageHeader\");\n$RefreshReg$(_c2, \"DownloadsTable\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"HeaderRow\");\n$RefreshReg$(_c5, \"DataCell\");\n$RefreshReg$(_c6, \"ButtonContainer\");\n$RefreshReg$(_c7, \"PrimaryButton\");\n$RefreshReg$(_c8, \"SecondaryButton\");\n$RefreshReg$(_c9, \"MessageContainer\");\n$RefreshReg$(_c0, \"DownloadsPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","Link","supabase","useUser","jsxDEV","_jsxDEV","PageHeader","h2","_c","DownloadsTable","div","_c2","Row","_c3","HeaderRow","_c4","DataCell","_c5","ButtonContainer","_c6","PrimaryButton","_c7","SecondaryButton","_c8","MessageContainer","_c9","DownloadsPage","_s","user","isLoading","isUserLoading","files","setFiles","isPageLoading","setPageLoading","getPurchasedFiles","simulation_user_id","data","purchases","error","purchaseError","from","select","eq","length","fileIds","map","p","file_id","fileData","fileError","in","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","file","filename","to","id","border","borderRadius","_c0","$RefreshReg$"],"sources":["/Users/megamac/Dev/GitHub/projects/certempire-react/src/pages/DownloadsPage.tsx"],"sourcesContent":["// src/pages/DownloadsPage.tsx\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport { useUser } from '../context/UserContext';\n\ntype File = {\n  id: string;\n  filename: string;\n};\n\n// --- Styled Components ---\nconst PageHeader = styled.h2` font-size: 24px; font-weight: 600; margin-bottom: 24px; `;\nconst DownloadsTable = styled.div` background-color: white; border-radius: 16px; border: 1px solid #EAEAEA; overflow: hidden; `;\nconst Row = styled.div` display: grid; grid-template-columns: 3fr 2fr; align-items: center; padding: 16px 24px; border-bottom: 1px solid #f0f0f0; &:last-child { border-bottom: none; } `;\nconst HeaderRow = styled(Row)` background-color: #fafafa; font-weight: 600; color: #333; `;\nconst DataCell = styled.div` color: #555; `;\nconst ButtonContainer = styled.div` display: flex; gap: 12px; justify-content: flex-end; `;\nconst PrimaryButton = styled(Link)` display: inline-block; background-color: #2c2c54; color: white; padding: 10px 20px; border-radius: 8px; text-decoration: none; font-weight: 500; font-size: 14px; `;\nconst SecondaryButton = styled(Link)` display: inline-block; background-color: white; color: #2c2c54; border: 1px solid #2c2c54; padding: 10px 20px; border-radius: 8px; text-decoration: none; font-weight: 500; font-size: 14px;`;\nconst MessageContainer = styled.div` padding: 40px; text-align: center; color: #757575; background-color: white; border-radius: 12px; border: 1px solid #EAEAEA; `;\n\nconst DownloadsPage = () => {\n  // We now get both the user and the isLoading status from our context\n  const { user, isLoading: isUserLoading } = useUser();\n  const [files, setFiles] = useState<File[]>([]);\n  const [isPageLoading, setPageLoading] = useState(true);\n\n  useEffect(() => {\n    const getPurchasedFiles = async () => {\n      // We must have a user and their Supabase ID to continue\n      if (!user || !user.simulation_user_id) {\n        setPageLoading(false);\n        return;\n      }\n      \n      try {\n        const { data: purchases, error: purchaseError } = await supabase\n          .from('user_purchases')\n          .select('file_id')\n          .eq('user_id', user.simulation_user_id);\n\n        if (purchaseError) throw purchaseError;\n        if (!purchases || purchases.length === 0) {\n          setFiles([]);\n          return;\n        }\n\n        const fileIds = purchases.map(p => p.file_id);\n        \n        const { data: fileData, error: fileError } = await supabase\n          .from('files')\n          .select('id, filename')\n          .in('id', fileIds);\n\n        if (fileError) throw fileError;\n        \n        setFiles(fileData || []);\n\n      } catch (error) {\n        console.error('Error fetching purchased files:', error);\n        setFiles([]);\n      } finally {\n        setPageLoading(false);\n      }\n    };\n\n    // This is the key change: We wait for the User Context to finish loading.\n    // Once isUserLoading is false, we know if we have a user or not, and we can proceed.\n    if (!isUserLoading) {\n      getPurchasedFiles();\n    }\n  }, [isUserLoading, user]); // The effect re-runs if the loading status or user changes\n\n  // Show a generic loading message while the context is loading or the page is fetching\n  if (isUserLoading || isPageLoading) return <MessageContainer>Loading your downloads...</MessageContainer>;\n  \n  // Show this if the context has loaded but there is no user\n  if (!user) return <MessageContainer>Please log in to view your downloads.</MessageContainer>;\n  \n  return (\n    <div>\n      <PageHeader>Downloads</PageHeader>\n      <DownloadsTable>\n        <HeaderRow>\n          <DataCell>Product</DataCell>\n          <DataCell style={{ textAlign: 'right' }}>Actions</DataCell>\n        </HeaderRow>\n        {files.length > 0 ? files.map((file) => (\n          <Row key={file.id}>\n            <DataCell>{file.filename}</DataCell>\n            <DataCell>\n              <ButtonContainer>\n                <PrimaryButton to=\"#\">Download</PrimaryButton>\n                <SecondaryButton to={`/practice/${file.id}`}>\n                  Practice\n                </SecondaryButton>\n              </ButtonContainer>\n            </DataCell>\n          </Row>\n        )) : (\n            <MessageContainer style={{border: 'none', borderRadius: 0}}>You have no available downloads.</MessageContainer>\n        )}\n      </DownloadsTable>\n    </div>\n  );\n};\n\nexport default DownloadsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
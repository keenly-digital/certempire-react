{"ast":null,"code":"// src/components/common/Sidebar.tsx\nimport React from'react';import styled from'styled-components';import{NavLink}from'react-router-dom';// The props interface for the component (for mobile state)\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// This container now matches the floating panel design from your Flutter code\nconst SidebarContainer=styled.aside`\n  width: 255px;\n  flex-shrink: 0;\n  margin: 24px;\n  background-color: ${_ref=>{let{theme}=_ref;return theme.colors.surface;}};\n  border-radius: ${_ref2=>{let{theme}=_ref2;return theme.borderRadius.large;}};\n  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.08); // Exact shadow from Flutter\n  border: 1.2px solid ${_ref3=>{let{theme}=_ref3;return theme.colors.lightGrey;}};\n  padding: 8px;\n  height: 93%;\n  \n  // This makes it a self-contained scrolling panel on desktop\n  align-self: flex-start;\n  position: sticky;\n  top: 24px;\n  \n  // Responsive logic for mobile/tablet view\n  @media (max-width: 768px) {\n    position: fixed;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: 280px;\n    margin: 0;\n    border-radius: 0;\n    transform: ${_ref4=>{let{isOpen}=_ref4;return isOpen?'translateX(0)':'translateX(-100%)';}};\n    transition: transform 0.3s ease-in-out;\n    z-index: 1000;\n    box-shadow: none;\n    padding: 0;\n    background-color: ${_ref5=>{let{theme}=_ref5;return theme.colors.surface;}};\n    border: none;\n  }\n`;const NavList=styled.nav`\n  display: flex;\n  flex-direction: column;\n\n  /* Remove border from the last item in the list */\n  > *:last-child {\n    border-bottom: none;\n  }\n`;// Base styles for both NavLink and Button to ensure they look the same\nconst navItemStyles=_ref6=>{let{theme}=_ref6;return`\n  display: block;\n  text-decoration: none;\n  font-size: 15px;\n  transition: all 0.10s ease-in-out;\n  border-bottom: 1px solid #f0f0f0; /* The Divider */\n\n  /* Default (inactive) state styles */\n  color: rgba(28, 36, 75, 0.85); /* textPrimary with opacity */\n  font-weight: 500;\n  padding: 13px 22px;\n  border-radius: 13px;\n  border-left: 1.3px solid transparent;\n  border-right: 1.3px solid transparent;\n  border-top: 1.3px solid transparent;\n  margin: 3px 0;\n\n  &:hover {\n    background-color: ${theme.colors.background};\n    color: ${theme.colors.primary};\n  }\n\n  @media (max-width: 768px) {\n    margin: 0;\n    border-radius: 0;\n    padding: 16px 24px;\n  }\n`;};const StyledNavLink=styled(NavLink)`\n  ${_ref7=>{let{theme}=_ref7;return navItemStyles({theme});}}\n\n  /* --- Styles for the ACTIVE link, matching Flutter's AnimatedContainer --- */\n  &.active {\n    color: ${_ref8=>{let{theme}=_ref8;return theme.colors.primary;}};\n    background-color: ${_ref9=>{let{theme}=_ref9;return theme.colors.background;}};\n    font-weight: 600;\n    margin: 3px 6px; // Inset margin for active state\n    border: 1.3px solid rgba(45, 22, 132, 0.21); // Active border\n  }\n\n  @media (max-width: 768px) {\n    &.active {\n      margin: 0;\n      border-left: 1.3px solid transparent;\n      border-right: 1.3px solid transparent;\n      border-top: 1.3px solid transparent;\n      background-color: ${_ref0=>{let{theme}=_ref0;return theme.colors.button;}};\n    }\n  }\n`;// --- CORRECTED LOGOUT BUTTON ---\n// It now correctly inherits all base styles from navItemStyles\nconst LogoutButton=styled.button`\n  ${_ref1=>{let{theme}=_ref1;return navItemStyles({theme});}}\n  \n  // Add specific button resets\n  cursor: pointer;\n  text-align: left;\n  width: 100%;\n  font-family: inherit;\n  background-color: transparent; // Ensure it starts transparent like NavLink\n  border: none; // Reset default button border\n`;const Sidebar=_ref10=>{let{isOpen,onLogoutClick}=_ref10;return/*#__PURE__*/_jsx(SidebarContainer,{isOpen:isOpen,children:/*#__PURE__*/_jsxs(NavList,{children:[/*#__PURE__*/_jsx(StyledNavLink,{to:\"/\",end:true,children:\"Dashboard\"}),/*#__PURE__*/_jsx(StyledNavLink,{to:\"/orders\",children:\"Orders\"}),/*#__PURE__*/_jsx(StyledNavLink,{to:\"/downloads\",children:\"Downloads\"}),/*#__PURE__*/_jsx(StyledNavLink,{to:\"/addresses\",children:\"Addresses\"}),/*#__PURE__*/_jsx(StyledNavLink,{to:\"/account-details\",children:\"Account Details\"}),/*#__PURE__*/_jsx(LogoutButton,{onClick:onLogoutClick,children:\"Log out\"})]})});};export default Sidebar;","map":{"version":3,"names":["React","styled","NavLink","jsx","_jsx","jsxs","_jsxs","SidebarContainer","aside","_ref","theme","colors","surface","_ref2","borderRadius","large","_ref3","lightGrey","_ref4","isOpen","_ref5","NavList","nav","navItemStyles","_ref6","background","primary","StyledNavLink","_ref7","_ref8","_ref9","_ref0","button","LogoutButton","_ref1","Sidebar","_ref10","onLogoutClick","children","to","end","onClick"],"sources":["/Users/megamac/Dev/GitHub/projects/certempire-react/src/components/common/Sidebar.tsx"],"sourcesContent":["// src/components/common/Sidebar.tsx\nimport React from 'react';\nimport styled, { DefaultTheme } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n// The props interface for the component (for mobile state)\ninterface SidebarProps {\n  isOpen: boolean;\n  onLogoutClick: () => void;\n}\n\n// This container now matches the floating panel design from your Flutter code\nconst SidebarContainer = styled.aside<{ isOpen: boolean; }>`\n  width: 255px;\n  flex-shrink: 0;\n  margin: 24px;\n  background-color: ${({ theme }) => theme.colors.surface};\n  border-radius: ${({ theme }) => theme.borderRadius.large};\n  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.08); // Exact shadow from Flutter\n  border: 1.2px solid ${({ theme }) => theme.colors.lightGrey};\n  padding: 8px;\n  height: 93%;\n  \n  // This makes it a self-contained scrolling panel on desktop\n  align-self: flex-start;\n  position: sticky;\n  top: 24px;\n  \n  // Responsive logic for mobile/tablet view\n  @media (max-width: 768px) {\n    position: fixed;\n    left: 0;\n    top: 0;\n    height: 100%;\n    width: 280px;\n    margin: 0;\n    border-radius: 0;\n    transform: ${({ isOpen }) => isOpen ? 'translateX(0)' : 'translateX(-100%)'};\n    transition: transform 0.3s ease-in-out;\n    z-index: 1000;\n    box-shadow: none;\n    padding: 0;\n    background-color: ${({ theme }) => theme.colors.surface};\n    border: none;\n  }\n`;\n\nconst NavList = styled.nav`\n  display: flex;\n  flex-direction: column;\n\n  /* Remove border from the last item in the list */\n  > *:last-child {\n    border-bottom: none;\n  }\n`;\n\n// Base styles for both NavLink and Button to ensure they look the same\nconst navItemStyles = ({ theme }: { theme: DefaultTheme }) => `\n  display: block;\n  text-decoration: none;\n  font-size: 15px;\n  transition: all 0.10s ease-in-out;\n  border-bottom: 1px solid #f0f0f0; /* The Divider */\n\n  /* Default (inactive) state styles */\n  color: rgba(28, 36, 75, 0.85); /* textPrimary with opacity */\n  font-weight: 500;\n  padding: 13px 22px;\n  border-radius: 13px;\n  border-left: 1.3px solid transparent;\n  border-right: 1.3px solid transparent;\n  border-top: 1.3px solid transparent;\n  margin: 3px 0;\n\n  &:hover {\n    background-color: ${theme.colors.background};\n    color: ${theme.colors.primary};\n  }\n\n  @media (max-width: 768px) {\n    margin: 0;\n    border-radius: 0;\n    padding: 16px 24px;\n  }\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  ${({ theme }) => navItemStyles({ theme })}\n\n  /* --- Styles for the ACTIVE link, matching Flutter's AnimatedContainer --- */\n  &.active {\n    color: ${({ theme }) => theme.colors.primary};\n    background-color: ${({ theme }) => theme.colors.background};\n    font-weight: 600;\n    margin: 3px 6px; // Inset margin for active state\n    border: 1.3px solid rgba(45, 22, 132, 0.21); // Active border\n  }\n\n  @media (max-width: 768px) {\n    &.active {\n      margin: 0;\n      border-left: 1.3px solid transparent;\n      border-right: 1.3px solid transparent;\n      border-top: 1.3px solid transparent;\n      background-color: ${({ theme }) => theme.colors.button};\n    }\n  }\n`;\n\n// --- CORRECTED LOGOUT BUTTON ---\n// It now correctly inherits all base styles from navItemStyles\nconst LogoutButton = styled.button`\n  ${({ theme }) => navItemStyles({ theme })}\n  \n  // Add specific button resets\n  cursor: pointer;\n  text-align: left;\n  width: 100%;\n  font-family: inherit;\n  background-color: transparent; // Ensure it starts transparent like NavLink\n  border: none; // Reset default button border\n`;\n\nconst Sidebar: React.FC<SidebarProps> = ({ isOpen, onLogoutClick }) => {\n  return (\n    <SidebarContainer isOpen={isOpen}>\n      <NavList>\n        <StyledNavLink to=\"/\" end>Dashboard</StyledNavLink>\n        <StyledNavLink to=\"/orders\">Orders</StyledNavLink>\n        <StyledNavLink to=\"/downloads\">Downloads</StyledNavLink>\n        <StyledNavLink to=\"/addresses\">Addresses</StyledNavLink>\n        <StyledNavLink to=\"/account-details\">Account Details</StyledNavLink>\n        <LogoutButton onClick={onLogoutClick}>Log out</LogoutButton>\n      </NavList>\n    </SidebarContainer>\n  );\n};\n\nexport default Sidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/megamac/certempire-react/src/pages/SimulationPage.tsx\",\n  _s = $RefreshSig$();\n// src/pages/SimulationPage.tsx\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { supabase } from '../supabaseClient'; // Import our Supabase client\n\n// --- Type Definitions (from before, no changes needed) ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// --- Data Fetching and Processing ---\n\n// This function will fetch the data from Supabase\nasync function fetchSimulationData(fileId) {\n  var _data$aiParsedData;\n  const {\n    data,\n    error\n  } = await supabase.from('files').select('ai-parsed-data, filename') // We select the data column and filename\n  .eq('id', fileId).single();\n  if (error) {\n    console.error(\"Error fetching file:\", error);\n    return null;\n  }\n\n  // The data structure is nested, so we access it like in your admin panel\n  return {\n    fileName: data.filename,\n    ...((_data$aiParsedData = data['ai-parsed-data']) === null || _data$aiParsedData === void 0 ? void 0 : _data$aiParsedData.result)\n  };\n}\n\n// Helper function to get a flat list of questions\nconst getAllQuestions = topics => {\n  if (!topics) return [];\n  let questions = [];\n  Object.values(topics).forEach(topic => {\n    if (topic.questions && Array.isArray(topic.questions)) {\n      questions = [...questions, ...topic.questions];\n    }\n  });\n  // Re-assign question_number to ensure it's sequential\n  return questions.map((q, index) => ({\n    ...q,\n    qNumber: index + 1\n  }));\n};\n\n// --- Styled Components (No changes needed) ---\nconst PageContainer = styled.div` display: flex; flex-direction: column; gap: 16px; `;\n_c = PageContainer;\nconst HeaderContainer = styled.div` display: flex; flex-direction: column; gap: 16px; `;\n_c2 = HeaderContainer;\nconst HeaderTopRow = styled.div` display: flex; justify-content: space-between; align-items: center; gap: 16px; flex-wrap: wrap; `;\n_c3 = HeaderTopRow;\nconst FileName = styled.h2` color: #2c2c54; font-weight: bold; font-size: 22px; `;\n_c4 = FileName;\nconst QuestionCardContainer = styled.div` padding: 26px; box-shadow: 0 5px 15px rgba(103, 58, 183, 0.04); `;\n_c5 = QuestionCardContainer;\nconst QuestionHeader = styled.div` display: flex; align-items: flex-start; gap: 18px; margin-bottom: 24px; `;\n_c6 = QuestionHeader;\nconst QuestionNumber = styled.div` background-color: rgba(103, 58, 183, 0.12); color: #673AB7; font-weight: bold; font-size: 16px; padding: 12px; border-radius: 10px; `;\n_c7 = QuestionNumber;\nconst QuestionText = styled.p` font-size: 17px; font-weight: 500; line-height: 1.34; flex: 1; `;\n_c8 = QuestionText;\nconst Label = styled.p` color: #BDBDBD; font-weight: 600; font-size: 12px; text-transform: uppercase; letter-spacing: 0.8px; margin-bottom: 8px; `;\n_c9 = Label;\nconst OptionsList = styled.div` display: flex; flex-direction: column; gap: 6px; padding-left: 76px; `;\n_c0 = OptionsList;\nconst OptionItem = styled.div` border: 1.1px solid ${({\n  $isCorrect\n}) => $isCorrect ? '#38b000' : '#E0E0E0'}; background-color: ${({\n  $isCorrect\n}) => $isCorrect ? '#F4FBF6' : 'transparent'}; border-radius: 8px; padding: 11px 14px; font-size: 15px; line-height: 1.35; `;\n_c1 = OptionItem;\nconst ActionButtons = styled.div` display: flex; justify-content: flex-end; gap: 8px; margin-top: 26px; `;\n_c10 = ActionButtons;\nconst ReportButton = styled.button` border: 1px solid rgba(255, 152, 0, 0.5); color: #FF9800; background: none; padding: 10px 12px; border-radius: 8px; cursor: pointer; display: flex; align-items: center; gap: 8px; `;\n_c11 = ReportButton;\nconst PrimaryButton = styled.button` border: none; background-color: #673AB7; color: white; padding: 10px 12px; border-radius: 8px; cursor: pointer; display: flex; align-items: center; gap: 8px; `;\n_c12 = PrimaryButton;\nconst ExplanationSection = styled.div` padding-top: 16px; margin-top: 16px; border-top: 1.1px solid #E0E0E0; `;\n_c13 = ExplanationSection;\nconst PaginationContainer = styled.div` display: flex; justify-content: space-between; align-items: center; padding: 16px 24px; background-color: white; border: 1px solid #E0E0E0; border-radius: 12px; `;\n_c14 = PaginationContainer;\nconst PageButton = styled.button` background: none; border: none; cursor: pointer; &:disabled { cursor: not-allowed; } `;\n_c15 = PageButton;\nconst ContentContainer = styled.div` background-color: white; border-radius: 12px; border: 1px solid #E0E0E0; `;\n_c16 = ContentContainer;\nconst LoadingContainer = styled.div` display: flex; justify-content: center; align-items: center; height: 300px; font-size: 18px; color: #757575;`;\n\n// --- The Main Page Component ---\n_c17 = LoadingContainer;\nconst SimulationPage = () => {\n  _s();\n  // State to hold our data and loading status\n  const [simulationData, setSimulationData] = useState(null);\n  const [allQuestions, setAllQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isLoading, setLoading] = useState(true);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  // This useEffect hook runs once when the component loads\n  useEffect(() => {\n    // IMPORTANT: Replace this with a real file ID from your database\n    const FILE_ID_TO_FETCH = 'c8b6e379-3733-4015-ab65-0955c42b584a';\n    setLoading(true);\n    fetchSimulationData(FILE_ID_TO_FETCH).then(data => {\n      setSimulationData(data);\n      if (data && data.topics) {\n        setAllQuestions(getAllQuestions(data.topics));\n      }\n      setLoading(false);\n    });\n  }, []); // The empty array [] means this effect runs only once\n\n  // When the question changes, hide the answer\n  useEffect(() => {\n    setShowAnswer(false);\n  }, [currentQuestionIndex]);\n  const handleNext = () => {\n    if (currentQuestionIndex < allQuestions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n  const currentQuestion = allQuestions[currentQuestionIndex];\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n      children: \"Loading Simulation...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }, this);\n  }\n  if (!simulationData || allQuestions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n      children: \"Error: Could not load simulation data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: /*#__PURE__*/_jsxDEV(HeaderTopRow, {\n        children: /*#__PURE__*/_jsxDEV(FileName, {\n          children: simulationData.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: currentQuestion && /*#__PURE__*/_jsxDEV(QuestionCardContainer, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionHeader, {\n          children: [/*#__PURE__*/_jsxDEV(QuestionNumber, {\n            children: [\"Q: \", currentQuestion.qNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(QuestionText, {\n            dangerouslySetInnerHTML: {\n              __html: currentQuestion.text\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OptionsList, {\n          children: currentQuestion.options.map((opt, index) => /*#__PURE__*/_jsxDEV(OptionItem, {\n            $isCorrect: showAnswer && currentQuestion.correctAnswerIndices.includes(String.fromCharCode(65 + index)),\n            children: [String.fromCharCode(65 + index), \". \", /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: opt\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 55\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ReportButton, {\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PrimaryButton, {\n            onClick: () => setShowAnswer(!showAnswer),\n            children: showAnswer ? 'Hide Answer' : 'Show Answer'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), showAnswer && /*#__PURE__*/_jsxDEV(ExplanationSection, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Explanation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: currentQuestion.explanation\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginationContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Question \", currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.qNumber, \" of \", allQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(PageButton, {\n          onClick: handlePrev,\n          disabled: currentQuestionIndex === 0,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PageButton, {\n          onClick: handleNext,\n          disabled: currentQuestionIndex === allQuestions.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationPage, \"0NHc5UMwUgiSS5WGXTWeX6cjSQU=\");\n_c18 = SimulationPage;\nexport default SimulationPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"PageContainer\");\n$RefreshReg$(_c2, \"HeaderContainer\");\n$RefreshReg$(_c3, \"HeaderTopRow\");\n$RefreshReg$(_c4, \"FileName\");\n$RefreshReg$(_c5, \"QuestionCardContainer\");\n$RefreshReg$(_c6, \"QuestionHeader\");\n$RefreshReg$(_c7, \"QuestionNumber\");\n$RefreshReg$(_c8, \"QuestionText\");\n$RefreshReg$(_c9, \"Label\");\n$RefreshReg$(_c0, \"OptionsList\");\n$RefreshReg$(_c1, \"OptionItem\");\n$RefreshReg$(_c10, \"ActionButtons\");\n$RefreshReg$(_c11, \"ReportButton\");\n$RefreshReg$(_c12, \"PrimaryButton\");\n$RefreshReg$(_c13, \"ExplanationSection\");\n$RefreshReg$(_c14, \"PaginationContainer\");\n$RefreshReg$(_c15, \"PageButton\");\n$RefreshReg$(_c16, \"ContentContainer\");\n$RefreshReg$(_c17, \"LoadingContainer\");\n$RefreshReg$(_c18, \"SimulationPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","supabase","jsxDEV","_jsxDEV","fetchSimulationData","fileId","_data$aiParsedData","data","error","from","select","eq","single","console","fileName","filename","result","getAllQuestions","topics","questions","Object","values","forEach","topic","Array","isArray","map","q","index","qNumber","PageContainer","div","_c","HeaderContainer","_c2","HeaderTopRow","_c3","FileName","h2","_c4","QuestionCardContainer","_c5","QuestionHeader","_c6","QuestionNumber","_c7","QuestionText","p","_c8","Label","_c9","OptionsList","_c0","OptionItem","$isCorrect","_c1","ActionButtons","_c10","ReportButton","button","_c11","PrimaryButton","_c12","ExplanationSection","_c13","PaginationContainer","_c14","PageButton","_c15","ContentContainer","_c16","LoadingContainer","_c17","SimulationPage","_s","simulationData","setSimulationData","allQuestions","setAllQuestions","currentQuestionIndex","setCurrentQuestionIndex","isLoading","setLoading","showAnswer","setShowAnswer","FILE_ID_TO_FETCH","then","handleNext","length","prev","handlePrev","currentQuestion","children","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","text","options","opt","correctAnswerIndices","includes","String","fromCharCode","onClick","explanation","style","display","gap","disabled","_c18","$RefreshReg$"],"sources":["/Users/megamac/certempire-react/src/pages/SimulationPage.tsx"],"sourcesContent":["// src/pages/SimulationPage.tsx\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { supabase } from '../supabaseClient'; // Import our Supabase client\n\n// --- Type Definitions (from before, no changes needed) ---\ntype Question = { type: 'question'; id: string; qNumber: number; text: string; description: string; options: string[]; correctAnswerIndices: number[]; explanation: string; };\ntype CaseStudy = { type: 'case_study'; title: string; description: string; questions: Question[]; };\ntype Topic = { type: 'topic'; title: string; items: (Topic | CaseStudy)[]; };\ntype SimulationItem = Question | Topic | CaseStudy;\n\n// --- Data Fetching and Processing ---\n\n// This function will fetch the data from Supabase\nasync function fetchSimulationData(fileId: string) {\n  const { data, error } = await supabase\n    .from('files')\n    .select('ai-parsed-data, filename') // We select the data column and filename\n    .eq('id', fileId)\n    .single();\n\n  if (error) {\n    console.error(\"Error fetching file:\", error);\n    return null;\n  }\n  \n  // The data structure is nested, so we access it like in your admin panel\n  return {\n    fileName: data.filename,\n    ...data['ai-parsed-data']?.result\n  };\n}\n\n// Helper function to get a flat list of questions\nconst getAllQuestions = (topics: Record<string, any>): Question[] => {\n  if (!topics) return [];\n  let questions: Question[] = [];\n  Object.values(topics).forEach((topic) => {\n    if (topic.questions && Array.isArray(topic.questions)) {\n      questions = [...questions, ...topic.questions];\n    }\n  });\n  // Re-assign question_number to ensure it's sequential\n  return questions.map((q, index) => ({ ...q, qNumber: index + 1 }));\n};\n\n\n// --- Styled Components (No changes needed) ---\nconst PageContainer = styled.div` display: flex; flex-direction: column; gap: 16px; `;\nconst HeaderContainer = styled.div` display: flex; flex-direction: column; gap: 16px; `;\nconst HeaderTopRow = styled.div` display: flex; justify-content: space-between; align-items: center; gap: 16px; flex-wrap: wrap; `;\nconst FileName = styled.h2` color: #2c2c54; font-weight: bold; font-size: 22px; `;\nconst QuestionCardContainer = styled.div` padding: 26px; box-shadow: 0 5px 15px rgba(103, 58, 183, 0.04); `;\nconst QuestionHeader = styled.div` display: flex; align-items: flex-start; gap: 18px; margin-bottom: 24px; `;\nconst QuestionNumber = styled.div` background-color: rgba(103, 58, 183, 0.12); color: #673AB7; font-weight: bold; font-size: 16px; padding: 12px; border-radius: 10px; `;\nconst QuestionText = styled.p` font-size: 17px; font-weight: 500; line-height: 1.34; flex: 1; `;\nconst Label = styled.p` color: #BDBDBD; font-weight: 600; font-size: 12px; text-transform: uppercase; letter-spacing: 0.8px; margin-bottom: 8px; `;\nconst OptionsList = styled.div` display: flex; flex-direction: column; gap: 6px; padding-left: 76px; `;\nconst OptionItem = styled.div<{ $isCorrect: boolean; }>` border: 1.1px solid ${({ $isCorrect }) => $isCorrect ? '#38b000' : '#E0E0E0'}; background-color: ${({ $isCorrect }) => $isCorrect ? '#F4FBF6' : 'transparent'}; border-radius: 8px; padding: 11px 14px; font-size: 15px; line-height: 1.35; `;\nconst ActionButtons = styled.div` display: flex; justify-content: flex-end; gap: 8px; margin-top: 26px; `;\nconst ReportButton = styled.button` border: 1px solid rgba(255, 152, 0, 0.5); color: #FF9800; background: none; padding: 10px 12px; border-radius: 8px; cursor: pointer; display: flex; align-items: center; gap: 8px; `;\nconst PrimaryButton = styled.button` border: none; background-color: #673AB7; color: white; padding: 10px 12px; border-radius: 8px; cursor: pointer; display: flex; align-items: center; gap: 8px; `;\nconst ExplanationSection = styled.div` padding-top: 16px; margin-top: 16px; border-top: 1.1px solid #E0E0E0; `;\nconst PaginationContainer = styled.div` display: flex; justify-content: space-between; align-items: center; padding: 16px 24px; background-color: white; border: 1px solid #E0E0E0; border-radius: 12px; `;\nconst PageButton = styled.button` background: none; border: none; cursor: pointer; &:disabled { cursor: not-allowed; } `;\nconst ContentContainer = styled.div` background-color: white; border-radius: 12px; border: 1px solid #E0E0E0; `;\nconst LoadingContainer = styled.div` display: flex; justify-content: center; align-items: center; height: 300px; font-size: 18px; color: #757575;`;\n\n// --- The Main Page Component ---\nconst SimulationPage = () => {\n  // State to hold our data and loading status\n  const [simulationData, setSimulationData] = useState<any>(null);\n  const [allQuestions, setAllQuestions] = useState<Question[]>([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [isLoading, setLoading] = useState(true);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  // This useEffect hook runs once when the component loads\n  useEffect(() => {\n    // IMPORTANT: Replace this with a real file ID from your database\n    const FILE_ID_TO_FETCH = 'c8b6e379-3733-4015-ab65-0955c42b584a';\n\n    setLoading(true);\n    fetchSimulationData(FILE_ID_TO_FETCH).then(data => {\n      setSimulationData(data);\n      if (data && data.topics) {\n        setAllQuestions(getAllQuestions(data.topics));\n      }\n      setLoading(false);\n    });\n  }, []); // The empty array [] means this effect runs only once\n\n  // When the question changes, hide the answer\n  useEffect(() => {\n    setShowAnswer(false);\n  }, [currentQuestionIndex]);\n  \n  const handleNext = () => {\n    if (currentQuestionIndex < allQuestions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n\n  const currentQuestion = allQuestions[currentQuestionIndex];\n\n  if (isLoading) {\n    return <LoadingContainer>Loading Simulation...</LoadingContainer>;\n  }\n\n  if (!simulationData || allQuestions.length === 0) {\n    return <LoadingContainer>Error: Could not load simulation data.</LoadingContainer>;\n  }\n\n  return (\n    <PageContainer>\n      <HeaderContainer>\n        <HeaderTopRow>\n          <FileName>{simulationData.fileName}</FileName>\n        </HeaderTopRow>\n      </HeaderContainer>\n\n      <ContentContainer>\n        {currentQuestion && (\n          <QuestionCardContainer>\n            <QuestionHeader>\n              <QuestionNumber>Q: {currentQuestion.qNumber}</QuestionNumber>\n              <QuestionText dangerouslySetInnerHTML={{ __html: currentQuestion.text }} />\n            </QuestionHeader>\n            <Label>Options</Label>\n            <OptionsList>\n              {currentQuestion.options.map((opt: string, index: number) => (\n                <OptionItem key={index} $isCorrect={showAnswer && currentQuestion.correctAnswerIndices.includes(String.fromCharCode(65 + index))}>\n                   {String.fromCharCode(65 + index)}. <span dangerouslySetInnerHTML={{ __html: opt }} />\n                </OptionItem>\n              ))}\n            </OptionsList>\n            <ActionButtons>\n              <ReportButton>Report</ReportButton>\n              <PrimaryButton onClick={() => setShowAnswer(!showAnswer)}>\n                {showAnswer ? 'Hide Answer' : 'Show Answer'}\n              </PrimaryButton>\n            </ActionButtons>\n            {showAnswer && (\n              <ExplanationSection>\n                <Label>Explanation</Label>\n                <div dangerouslySetInnerHTML={{ __html: currentQuestion.explanation }} />\n              </ExplanationSection>\n            )}\n          </QuestionCardContainer>\n        )}\n      </ContentContainer>\n      \n      <PaginationContainer>\n        <span>Question {currentQuestion?.qNumber} of {allQuestions.length}</span>\n        <div style={{ display: 'flex', gap: '8px' }}>\n          <PageButton onClick={handlePrev} disabled={currentQuestionIndex === 0}>Back</PageButton>\n          <PageButton onClick={handleNext} disabled={currentQuestionIndex === allQuestions.length - 1}>Next</PageButton>\n        </div>\n      </PaginationContainer>\n    </PageContainer>\n  );\n};\n\nexport default SimulationPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}